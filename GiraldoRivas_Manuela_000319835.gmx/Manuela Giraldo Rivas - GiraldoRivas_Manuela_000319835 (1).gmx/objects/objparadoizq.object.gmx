<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprparadoizq</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inicializacion de las variables

grav = 0.2;
hsp = 0;
vsp = 0;
movespeed = 4;


jumpspeed_normal = 7;
jumpspeed_powerup = 10;

jumpspeed = jumpspeed_normal

can_shoot = 1;

audio_play_sound(sndmusicafondo, 10, false)

bolitaguayaba = false;
bolitamorada = false;
bolitarosada = false;
bolitazul = false;
bolitaverde = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///N° de balas 
can_shoot= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento del pesonaje 

// Obtener las entradas de teclado
key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check(vk_up);
key_down = keyboard_check(vk_down);

if keyboard_check(vk_right){
       sprite_index = sprpersonajecorriendoizq image_xscale = -1;
}
if keyboard_check(vk_left){
        sprite_index = sprpersonajecorriendoizq;
}

if keyboard_check(vk_up){
        sprite_index = sprsaltoizq 
        }
        
if keyboard_check_pressed(vk_down){
       sprite_index = sprfallingizq image_xscale = -1;
        sprite_index = sprfallingizq image_xscale = 1;
}
        
if !keyboard_check(vk_anykey){
    sprite_index = sprparadoizq;
}

// Operaciones con las entradas de teclado
move = key_right - key_left;
hsp = move * movespeed;

// Colision Horizontal
if(place_meeting(x+hsp, y, objplataforma)){
   while(!place_meeting(x+sign(hsp), y, objplataforma)){
         x += sign(hsp);
   }
   hsp = 0;
}
x += hsp;

if (vsp &lt; 10) {vsp += grav;}
if (place_meeting(x, y+1, objplataforma)){
    vsp = key_up * -jumpspeed;
}

// Colision Vertical
if(place_meeting(x, y+vsp, objplataforma)){
   while(!place_meeting(x, y+sign(vsp), objplataforma)){
         y += sign(vsp);
}
   vsp = 0;
} 
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gestión de Llaves

/* Se utilizará place_meeting para verificar la colisión con alguna llave,
 luego se destruye la llave y se pone a true la variable respectiva en el
 objeto principal de llave.
 */
 
 if (place_meeting(x,y, objbolitaguayaba))
    {
    with(objbolitaguayaba){instance_destroy();}
    bolitaguayaba= true;
    }
    
if (place_meeting(x,y,objbolitamorada))
    {
    with(objbolitamorada){instance_destroy();}
    bolitamorada= true;
    }
    
if (place_meeting(x,y,objbolitarosada))
    {
    with(objbolitarosada){instance_destroy();}
    bolitarosada= true;
    }

if (place_meeting(x,y,objbolitaazul))
    {
    with(objbolitaazul){instance_destroy();}
   bolitaazul= true;
    }
    
if (place_meeting(x,y,objbolitaverde))
    {
    with(objbolitaverde){instance_destroy();}
    bolitaverde= true;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disparar balas


if keyboard_check(ord('F'))
   {
  if(can_shoot){
         instance_create( x,y,objbala);
         can_shoot = 0;}
         alarm[0] = 15;
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objbala">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>objexplosion</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
