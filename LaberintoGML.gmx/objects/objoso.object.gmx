<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sproso</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;

llavemorada= false;
llavedorada= false;
llaveroja= false;
llaveplateada= false;
llavenegra= false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento del jugador

if (!place_meeting(x-velocidad,y,objpared))&amp;&amp;(!place_meeting(x-velocidad,y,objpuertapadre))
    {
   if (keyboard_check(vk_left)){x = x-velocidad;}
    }

if (!place_meeting(x+velocidad,y,objpared))&amp;&amp;(!place_meeting(x-velocidad,y,objpuertapadre))
    {
    if (keyboard_check(vk_right)){x = x+velocidad;}
    }

if  (!place_meeting(x,y-velocidad,objpared))&amp;&amp;(!place_meeting(x-velocidad,y,objpuertapadre))
    {
    if (keyboard_check(vk_up)){y = y-velocidad;}
    }
    
if  (!place_meeting(x,y+velocidad,objpared))&amp;&amp;(!place_meeting(x-velocidad,y,objpuertapadre))
    {
    if (keyboard_check(vk_down)){y = y+velocidad;}
    }


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gestión de Llaves

/* Se utilizará place_meeting para verificar la colisión con alguna llave,
 luego se destruye la llave y se pone a true la variable respectiva en el
 objeto principal de llave.
 */
 
 if (place_meeting(x,y,objllavenegra))
    {
    with(objllavenegra){instance_destroy();}
    llavenegra= true;
    audio_play_sound(snddiamante, 10, false);
    }
    
if (place_meeting(x,y,objllaveroja))
    {
    with(objllaveroja){instance_destroy();}
    llaveroja= true;
    audio_play_sound(snddiamante, 10, false);
    }
    
if (place_meeting(x,y,objllavedorada))
    {
    with(objllavedorada){instance_destroy();}
    llavedorada= true;
    audio_play_sound(snddiamante, 10, false);
    }

if (place_meeting(x,y,objllaveplateada))
    {
    with(objllaveplateada){instance_destroy();}
    llaveplateada= true;
    audio_play_sound(snddiamante, 10, false);
    }
    
if (place_meeting(x,y,objllavemorada))
    {
    with(objllavemorada){instance_destroy();}
    llavemorada= true;
    audio_play_sound(snddiamante, 10, false);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gestión de Puertas

/* En forma similar a las llaves se verificará el estado de la variable 
respectia de la llave, la colisión, y luego se destruye la puerta.*/

if(llavenegra)
  {
  if(place_meeting(x+velocidad,y,objpuertanegra))||
  (place_meeting(x-velocidad,y,objpuertanegra))||
  (place_meeting(x,y+velocidad,objpuertanegra))||
  (place_meeting(x,y+velocidad,objpuertanegra))
    {
    with(objpuertanegra){instance_destroy();}
    audio_play_sound(sndpuerta, 10, false);
    }
  }
 
  if(llaveroja)
  {
  if(place_meeting(x+velocidad,y,objpuertaroja))||
  (place_meeting(x-velocidad,y,objpuertaroja))||
  (place_meeting(x,y+velocidad,objpuertaroja))||
  (place_meeting(x,y+velocidad,objpuertaroja))
    {
    with(objpuertaroja){instance_destroy();}
    audio_play_sound(sndpuerta, 10, false);
    }
  }
  
  if(llaveplateada)
  {
  if(place_meeting(x+velocidad,y,objpuertaplateada))||
  (place_meeting(x-velocidad,y,objpuertaplateada))||
  (place_meeting(x,y+velocidad,objpuertaplateada))||
  (place_meeting(x,y+velocidad,objpuertaplateada))
    {
    with(objpuertaplateada){instance_destroy();}
    audio_play_sound(sndpuerta, 10, false);
    }
  }
  
  if(llavemorada)
  {
  if(place_meeting(x+velocidad,y,objpuertamorada))||
  (place_meeting(x-velocidad,y,objpuertamorada))||
  (place_meeting(x,y+velocidad,objpuertamorada))||
  (place_meeting(x,y+velocidad,objpuertamorada))
    {
    with(objpuertamorada){instance_destroy();}
    audio_play_sound(sndpuerta, 10, false);
    }
  }
  
  if(llavedorada)
  {
  if(place_meeting(x+velocidad,y,objpuertadorada))||
  (place_meeting(x-velocidad,y,objpuertadorada))||
  (place_meeting(x,y+velocidad,objpuertadorada))||
  (place_meeting(x,y+velocidad,objpuertadorada))
    {
    with(objpuertadorada){instance_destroy();}
    audio_play_sound(sndpuerta, 10, false);
    }
  }
  

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objenemigopadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy ();
audio_play_sound(sndmuerte, 10, false);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objbanderin_">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndmeta, 10, false);

if (room_exists(room_next(room)))
   {room_goto_next();}
   else
   {room_goto(Inicio);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
